cache:
  paths:
    - github.com/
    - gopkg.in/
    - go.mongodb.org/

stages:
  - test
  - build
  - docker
  - deploy

variables:
  GIT_SSL_NO_VERIFY: "true"

test:
  stage: test
  image: 10.1.35.36:5000/devops/golang-jt-video-bank:1.1
  before_script:
    - export http_proxy=http://10.0.0.178:8080
    - export https_proxy=http://10.0.0.178:8080
  script:
    - env GOOS=linux GOARCH=amd64 CGO_ENABLED=0 APP_ENV=staging go test ./pkg/service/v1 -tags=unit_video_bank_service -v

build_apps:
  image: 10.1.35.36:5000/devops/golang-jt-video-bank:1.1
  stage: build
  before_script:
    - export http_proxy=http://10.0.0.178:8080
    - export https_proxy=http://10.0.0.178:8080
    - apk update && apk upgrade && apk add --no-cache git curl libressl
    - GIT_SSL_CAINFO=/etc/ssl/certs/ca-certificates.crt git submodule update --init
    - git config --global http.sslVerify false
  script:
    - env GOOS=linux GOARCH=amd64 CGO_ENABLED=0 APP_ENV=staging go build -o cmd/server/server cmd/server/main.go
    # - cd cmd/server/
    # - go build -o cmd/server/server cmd/server/main.go
    # - tar cvf server.tar server
  artifacts:
    paths:
    - cmd/server/server
  # only:
  #   - tags
    
build_docker:
  image: 10.1.35.36:5000/devops/docker_stable:1.0
  stage: docker
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_REGISTRY: "10.1.35.36:5000"
  services:
     - name: docker:18.09.7-dind
       command: ["--insecure-registry=10.1.35.36:5000"]
  before_script:
     - docker info
  script:
     - docker build -t jt_video_bank:$CI_BUILD_REF_NAME .
     - docker tag jt_video_bank:$CI_BUILD_REF_NAME $DOCKER_REGISTRY/devops/jt_video_bank:$CI_BUILD_REF_NAME
     - docker push $DOCKER_REGISTRY/devops/jt_video_bank:$CI_BUILD_REF_NAME
  when: manual
  # only:
  #   - tags
 
deploy_docker_staging:
  image: 10.1.35.36:5000/devops/docker_stable:1.0
  stage: deploy
  variables:
    DOCKER_HOST: "tcp://10.16.5.159:2376"
    DOCKER_TLS_VERIFY: 1
    DOCKER_REGISTRY: "10.1.35.36:5000"
    STACK_NAME: "jt"   #prefix
  services:
     - name: docker:18.09.7-dind
       command: ["--insecure-registry=10.1.35.36:5000"]
  script:
     - mkdir -p ~/.docker
     - echo "$TLSCACERT_STAGING" > ~/.docker/ca.pem
     - echo "$TLSCERT_STAGING" > ~/.docker/cert.pem
     - echo "$TLSKEY_STAGING" > ~/.docker/key.pem
     - docker stack deploy --compose-file docker-compose-dev.yml $STACK_NAME
     - docker stack ls | grep $STACK_NAME
     - docker stack ps $STACK_NAME
 
  # only:
  #   - tags
  when: manual

deploy_docker_production:
  image: 10.1.35.36:5000/devops/docker_stable:1.0
  stage: deploy
  variables:
    DOCKER_HOST: "tcp://10.16.5.193:2376"
    DOCKER_TLS_VERIFY: 1
    DOCKER_REGISTRY: "10.1.35.36:5000"
    STACK_NAME: "jt"
  services:
     - name: docker:18.09.7-dind
       command: ["--insecure-registry=10.1.35.36:5000"]
  script:
     - mkdir -p ~/.docker
     - echo "$TLSCACERT_PRODUCTION" > ~/.docker/ca.pem
     - echo "$TLSCERT_PRODUCTION" > ~/.docker/cert.pem
     - echo "$TLSKEY_PRODUCTION" > ~/.docker/key.pem
     - docker stack deploy --compose-file docker-compose-prod.yml $STACK_NAME
     - docker stack ls | grep $STACK_NAME
     - docker stack ps $STACK_NAME
 
  # only:
  #   - tags
  when: manual

